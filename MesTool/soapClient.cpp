/* soapClient.cpp
   Generated by gSOAP 2.8.63 for MESWebService.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

#pragma execution_character_set("utf-8")

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.63 2018-04-08 07:43:20 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetWorkCenterID(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetWorkCenterID *ns1__GetWorkCenterID, _ns1__GetWorkCenterIDResponse &ns1__GetWorkCenterIDResponse)
{	struct __ns1__GetWorkCenterID soap_tmp___ns1__GetWorkCenterID;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetWorkCenterID";
	soap_tmp___ns1__GetWorkCenterID.ns1__GetWorkCenterID = ns1__GetWorkCenterID;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetWorkCenterID(soap, &soap_tmp___ns1__GetWorkCenterID);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetWorkCenterID(soap, &soap_tmp___ns1__GetWorkCenterID, "-ns1:GetWorkCenterID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetWorkCenterID(soap, &soap_tmp___ns1__GetWorkCenterID, "-ns1:GetWorkCenterID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetWorkCenterIDResponse*>(&ns1__GetWorkCenterIDResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetWorkCenterIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetWorkCenterIDResponse.soap_get(soap, "ns1:GetWorkCenterIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetCurrentSpecBySn(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCurrentSpecBySn *ns1__GetCurrentSpecBySn, _ns1__GetCurrentSpecBySnResponse &ns1__GetCurrentSpecBySnResponse)
{	struct __ns1__GetCurrentSpecBySn soap_tmp___ns1__GetCurrentSpecBySn;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetCurrentSpecBySn";
	soap_tmp___ns1__GetCurrentSpecBySn.ns1__GetCurrentSpecBySn = ns1__GetCurrentSpecBySn;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCurrentSpecBySn(soap, &soap_tmp___ns1__GetCurrentSpecBySn);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCurrentSpecBySn(soap, &soap_tmp___ns1__GetCurrentSpecBySn, "-ns1:GetCurrentSpecBySn", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCurrentSpecBySn(soap, &soap_tmp___ns1__GetCurrentSpecBySn, "-ns1:GetCurrentSpecBySn", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetCurrentSpecBySnResponse*>(&ns1__GetCurrentSpecBySnResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetCurrentSpecBySnResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCurrentSpecBySnResponse.soap_get(soap, "ns1:GetCurrentSpecBySnResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IV_USCOREDataCollection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__IV_USCOREDataCollection *ns1__IV_USCOREDataCollection, _ns1__IV_USCOREDataCollectionResponse &ns1__IV_USCOREDataCollectionResponse)
{	struct __ns1__IV_USCOREDataCollection soap_tmp___ns1__IV_USCOREDataCollection;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IV_DataCollection";
	soap_tmp___ns1__IV_USCOREDataCollection.ns1__IV_USCOREDataCollection = ns1__IV_USCOREDataCollection;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__IV_USCOREDataCollection(soap, &soap_tmp___ns1__IV_USCOREDataCollection);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IV_USCOREDataCollection(soap, &soap_tmp___ns1__IV_USCOREDataCollection, "-ns1:IV_DataCollection", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IV_USCOREDataCollection(soap, &soap_tmp___ns1__IV_USCOREDataCollection, "-ns1:IV_DataCollection", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__IV_USCOREDataCollectionResponse*>(&ns1__IV_USCOREDataCollectionResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__IV_USCOREDataCollectionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IV_USCOREDataCollectionResponse.soap_get(soap, "ns1:IV_DataCollectionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__jKoIVMoveStd_USCOREPasan(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__jKoIVMoveStd_USCOREPasan *ns1__jKoIVMoveStd_USCOREPasan, _ns1__jKoIVMoveStd_USCOREPasanResponse &ns1__jKoIVMoveStd_USCOREPasanResponse)
{	struct __ns1__jKoIVMoveStd_USCOREPasan soap_tmp___ns1__jKoIVMoveStd_USCOREPasan;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/jKoIVMoveStd_Pasan";
	soap_tmp___ns1__jKoIVMoveStd_USCOREPasan.ns1__jKoIVMoveStd_USCOREPasan = ns1__jKoIVMoveStd_USCOREPasan;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__jKoIVMoveStd_USCOREPasan(soap, &soap_tmp___ns1__jKoIVMoveStd_USCOREPasan);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__jKoIVMoveStd_USCOREPasan(soap, &soap_tmp___ns1__jKoIVMoveStd_USCOREPasan, "-ns1:jKoIVMoveStd_Pasan", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__jKoIVMoveStd_USCOREPasan(soap, &soap_tmp___ns1__jKoIVMoveStd_USCOREPasan, "-ns1:jKoIVMoveStd_Pasan", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__jKoIVMoveStd_USCOREPasanResponse*>(&ns1__jKoIVMoveStd_USCOREPasanResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__jKoIVMoveStd_USCOREPasanResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__jKoIVMoveStd_USCOREPasanResponse.soap_get(soap, "ns1:jKoIVMoveStd_PasanResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__jKoIVMoveStd_USCORESpire(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__jKoIVMoveStd_USCORESpire *ns1__jKoIVMoveStd_USCORESpire, _ns1__jKoIVMoveStd_USCORESpireResponse &ns1__jKoIVMoveStd_USCORESpireResponse)
{	struct __ns1__jKoIVMoveStd_USCORESpire soap_tmp___ns1__jKoIVMoveStd_USCORESpire;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/jKoIVMoveStd_Spire";
	soap_tmp___ns1__jKoIVMoveStd_USCORESpire.ns1__jKoIVMoveStd_USCORESpire = ns1__jKoIVMoveStd_USCORESpire;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__jKoIVMoveStd_USCORESpire(soap, &soap_tmp___ns1__jKoIVMoveStd_USCORESpire);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__jKoIVMoveStd_USCORESpire(soap, &soap_tmp___ns1__jKoIVMoveStd_USCORESpire, "-ns1:jKoIVMoveStd_Spire", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__jKoIVMoveStd_USCORESpire(soap, &soap_tmp___ns1__jKoIVMoveStd_USCORESpire, "-ns1:jKoIVMoveStd_Spire", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__jKoIVMoveStd_USCORESpireResponse*>(&ns1__jKoIVMoveStd_USCORESpireResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__jKoIVMoveStd_USCORESpireResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__jKoIVMoveStd_USCORESpireResponse.soap_get(soap, "ns1:jKoIVMoveStd_SpireResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ELPictureAddress(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ELPictureAddress *ns1__ELPictureAddress, _ns1__ELPictureAddressResponse &ns1__ELPictureAddressResponse)
{	struct __ns1__ELPictureAddress soap_tmp___ns1__ELPictureAddress;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/ELPictureAddress";
	soap_tmp___ns1__ELPictureAddress.ns1__ELPictureAddress = ns1__ELPictureAddress;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ELPictureAddress(soap, &soap_tmp___ns1__ELPictureAddress);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ELPictureAddress(soap, &soap_tmp___ns1__ELPictureAddress, "-ns1:ELPictureAddress", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ELPictureAddress(soap, &soap_tmp___ns1__ELPictureAddress, "-ns1:ELPictureAddress", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ELPictureAddressResponse*>(&ns1__ELPictureAddressResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ELPictureAddressResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ELPictureAddressResponse.soap_get(soap, "ns1:ELPictureAddressResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ELInfoMoveStd(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ELInfoMoveStd *ns1__ELInfoMoveStd, _ns1__ELInfoMoveStdResponse &ns1__ELInfoMoveStdResponse)
{	struct __ns1__ELInfoMoveStd soap_tmp___ns1__ELInfoMoveStd;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/ELInfoMoveStd";
	soap_tmp___ns1__ELInfoMoveStd.ns1__ELInfoMoveStd = ns1__ELInfoMoveStd;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ELInfoMoveStd(soap, &soap_tmp___ns1__ELInfoMoveStd);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ELInfoMoveStd(soap, &soap_tmp___ns1__ELInfoMoveStd, "-ns1:ELInfoMoveStd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ELInfoMoveStd(soap, &soap_tmp___ns1__ELInfoMoveStd, "-ns1:ELInfoMoveStd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ELInfoMoveStdResponse*>(&ns1__ELInfoMoveStdResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ELInfoMoveStdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ELInfoMoveStdResponse.soap_get(soap, "ns1:ELInfoMoveStdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SafetyInfoMoveStd(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SafetyInfoMoveStd *ns1__SafetyInfoMoveStd, _ns1__SafetyInfoMoveStdResponse &ns1__SafetyInfoMoveStdResponse)
{	struct __ns1__SafetyInfoMoveStd soap_tmp___ns1__SafetyInfoMoveStd;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SafetyInfoMoveStd";
	soap_tmp___ns1__SafetyInfoMoveStd.ns1__SafetyInfoMoveStd = ns1__SafetyInfoMoveStd;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SafetyInfoMoveStd(soap, &soap_tmp___ns1__SafetyInfoMoveStd);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SafetyInfoMoveStd(soap, &soap_tmp___ns1__SafetyInfoMoveStd, "-ns1:SafetyInfoMoveStd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SafetyInfoMoveStd(soap, &soap_tmp___ns1__SafetyInfoMoveStd, "-ns1:SafetyInfoMoveStd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SafetyInfoMoveStdResponse*>(&ns1__SafetyInfoMoveStdResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SafetyInfoMoveStdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SafetyInfoMoveStdResponse.soap_get(soap, "ns1:SafetyInfoMoveStdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UploadTensileInfoToMes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UploadTensileInfoToMes *ns1__UploadTensileInfoToMes, _ns1__UploadTensileInfoToMesResponse &ns1__UploadTensileInfoToMesResponse)
{	struct __ns1__UploadTensileInfoToMes soap_tmp___ns1__UploadTensileInfoToMes;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/UploadTensileInfoToMes";
	soap_tmp___ns1__UploadTensileInfoToMes.ns1__UploadTensileInfoToMes = ns1__UploadTensileInfoToMes;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadTensileInfoToMes(soap, &soap_tmp___ns1__UploadTensileInfoToMes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadTensileInfoToMes(soap, &soap_tmp___ns1__UploadTensileInfoToMes, "-ns1:UploadTensileInfoToMes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadTensileInfoToMes(soap, &soap_tmp___ns1__UploadTensileInfoToMes, "-ns1:UploadTensileInfoToMes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UploadTensileInfoToMesResponse*>(&ns1__UploadTensileInfoToMesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UploadTensileInfoToMesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadTensileInfoToMesResponse.soap_get(soap, "ns1:UploadTensileInfoToMesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetContainerDataInfoMES(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetContainerDataInfoMES *ns1__GetContainerDataInfoMES, _ns1__GetContainerDataInfoMESResponse &ns1__GetContainerDataInfoMESResponse)
{	struct __ns1__GetContainerDataInfoMES soap_tmp___ns1__GetContainerDataInfoMES;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetContainerDataInfoMES";
	soap_tmp___ns1__GetContainerDataInfoMES.ns1__GetContainerDataInfoMES = ns1__GetContainerDataInfoMES;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetContainerDataInfoMES(soap, &soap_tmp___ns1__GetContainerDataInfoMES);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetContainerDataInfoMES(soap, &soap_tmp___ns1__GetContainerDataInfoMES, "-ns1:GetContainerDataInfoMES", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetContainerDataInfoMES(soap, &soap_tmp___ns1__GetContainerDataInfoMES, "-ns1:GetContainerDataInfoMES", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetContainerDataInfoMESResponse*>(&ns1__GetContainerDataInfoMESResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetContainerDataInfoMESResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetContainerDataInfoMESResponse.soap_get(soap, "ns1:GetContainerDataInfoMESResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetTensileTestRule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTensileTestRule *ns1__GetTensileTestRule, _ns1__GetTensileTestRuleResponse &ns1__GetTensileTestRuleResponse)
{	struct __ns1__GetTensileTestRule soap_tmp___ns1__GetTensileTestRule;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetTensileTestRule";
	soap_tmp___ns1__GetTensileTestRule.ns1__GetTensileTestRule = ns1__GetTensileTestRule;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTensileTestRule(soap, &soap_tmp___ns1__GetTensileTestRule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTensileTestRule(soap, &soap_tmp___ns1__GetTensileTestRule, "-ns1:GetTensileTestRule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTensileTestRule(soap, &soap_tmp___ns1__GetTensileTestRule, "-ns1:GetTensileTestRule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetTensileTestRuleResponse*>(&ns1__GetTensileTestRuleResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetTensileTestRuleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTensileTestRuleResponse.soap_get(soap, "ns1:GetTensileTestRuleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Iscalibrationcontainer(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Iscalibrationcontainer *ns1__Iscalibrationcontainer, _ns1__IscalibrationcontainerResponse &ns1__IscalibrationcontainerResponse)
{	struct __ns1__Iscalibrationcontainer soap_tmp___ns1__Iscalibrationcontainer;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/Iscalibrationcontainer";
	soap_tmp___ns1__Iscalibrationcontainer.ns1__Iscalibrationcontainer = ns1__Iscalibrationcontainer;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Iscalibrationcontainer(soap, &soap_tmp___ns1__Iscalibrationcontainer);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Iscalibrationcontainer(soap, &soap_tmp___ns1__Iscalibrationcontainer, "-ns1:Iscalibrationcontainer", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Iscalibrationcontainer(soap, &soap_tmp___ns1__Iscalibrationcontainer, "-ns1:Iscalibrationcontainer", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__IscalibrationcontainerResponse*>(&ns1__IscalibrationcontainerResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__IscalibrationcontainerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IscalibrationcontainerResponse.soap_get(soap, "ns1:IscalibrationcontainerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetFtpAddress(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFtpAddress *ns1__GetFtpAddress, _ns1__GetFtpAddressResponse &ns1__GetFtpAddressResponse)
{	struct __ns1__GetFtpAddress soap_tmp___ns1__GetFtpAddress;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetFtpAddress";
	soap_tmp___ns1__GetFtpAddress.ns1__GetFtpAddress = ns1__GetFtpAddress;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFtpAddress(soap, &soap_tmp___ns1__GetFtpAddress);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFtpAddress(soap, &soap_tmp___ns1__GetFtpAddress, "-ns1:GetFtpAddress", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFtpAddress(soap, &soap_tmp___ns1__GetFtpAddress, "-ns1:GetFtpAddress", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetFtpAddressResponse*>(&ns1__GetFtpAddressResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetFtpAddressResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFtpAddressResponse.soap_get(soap, "ns1:GetFtpAddressResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDefectInfoToSAP(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDefectInfoToSAP *ns1__GetDefectInfoToSAP, _ns1__GetDefectInfoToSAPResponse &ns1__GetDefectInfoToSAPResponse)
{	struct __ns1__GetDefectInfoToSAP soap_tmp___ns1__GetDefectInfoToSAP;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetDefectInfoToSAP";
	soap_tmp___ns1__GetDefectInfoToSAP.ns1__GetDefectInfoToSAP = ns1__GetDefectInfoToSAP;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDefectInfoToSAP(soap, &soap_tmp___ns1__GetDefectInfoToSAP);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDefectInfoToSAP(soap, &soap_tmp___ns1__GetDefectInfoToSAP, "-ns1:GetDefectInfoToSAP", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDefectInfoToSAP(soap, &soap_tmp___ns1__GetDefectInfoToSAP, "-ns1:GetDefectInfoToSAP", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDefectInfoToSAPResponse*>(&ns1__GetDefectInfoToSAPResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDefectInfoToSAPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDefectInfoToSAPResponse.soap_get(soap, "ns1:GetDefectInfoToSAPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetDefectResultToMES(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetDefectResultToMES *ns1__SetDefectResultToMES, _ns1__SetDefectResultToMESResponse &ns1__SetDefectResultToMESResponse)
{	struct __ns1__SetDefectResultToMES soap_tmp___ns1__SetDefectResultToMES;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetDefectResultToMES";
	soap_tmp___ns1__SetDefectResultToMES.ns1__SetDefectResultToMES = ns1__SetDefectResultToMES;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetDefectResultToMES(soap, &soap_tmp___ns1__SetDefectResultToMES);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetDefectResultToMES(soap, &soap_tmp___ns1__SetDefectResultToMES, "-ns1:SetDefectResultToMES", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetDefectResultToMES(soap, &soap_tmp___ns1__SetDefectResultToMES, "-ns1:SetDefectResultToMES", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetDefectResultToMESResponse*>(&ns1__SetDefectResultToMESResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetDefectResultToMESResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetDefectResultToMESResponse.soap_get(soap, "ns1:SetDefectResultToMESResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetMaterialBatchResultToMES(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetMaterialBatchResultToMES *ns1__SetMaterialBatchResultToMES, _ns1__SetMaterialBatchResultToMESResponse &ns1__SetMaterialBatchResultToMESResponse)
{	struct __ns1__SetMaterialBatchResultToMES soap_tmp___ns1__SetMaterialBatchResultToMES;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetMaterialBatchResultToMES";
	soap_tmp___ns1__SetMaterialBatchResultToMES.ns1__SetMaterialBatchResultToMES = ns1__SetMaterialBatchResultToMES;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetMaterialBatchResultToMES(soap, &soap_tmp___ns1__SetMaterialBatchResultToMES);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetMaterialBatchResultToMES(soap, &soap_tmp___ns1__SetMaterialBatchResultToMES, "-ns1:SetMaterialBatchResultToMES", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetMaterialBatchResultToMES(soap, &soap_tmp___ns1__SetMaterialBatchResultToMES, "-ns1:SetMaterialBatchResultToMES", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetMaterialBatchResultToMESResponse*>(&ns1__SetMaterialBatchResultToMESResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetMaterialBatchResultToMESResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetMaterialBatchResultToMESResponse.soap_get(soap, "ns1:SetMaterialBatchResultToMESResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs *ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs, _ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse &ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse)
{	struct __ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/Upload_FIDWUL_DATAFLAGs";
	soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs.ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs = ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs(soap, &soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs(soap, &soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs, "-ns1:Upload_FIDWUL_DATAFLAGs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs(soap, &soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs, "-ns1:Upload_FIDWUL_DATAFLAGs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse*>(&ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse.soap_get(soap, "ns1:Upload_FIDWUL_DATAFLAGsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CanLogin(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CanLogin *ns1__CanLogin, _ns1__CanLoginResponse &ns1__CanLoginResponse)
{	struct __ns1__CanLogin soap_tmp___ns1__CanLogin;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/CanLogin";
	soap_tmp___ns1__CanLogin.ns1__CanLogin = ns1__CanLogin;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CanLogin(soap, &soap_tmp___ns1__CanLogin);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CanLogin(soap, &soap_tmp___ns1__CanLogin, "-ns1:CanLogin", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CanLogin(soap, &soap_tmp___ns1__CanLogin, "-ns1:CanLogin", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CanLoginResponse*>(&ns1__CanLoginResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CanLoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CanLoginResponse.soap_get(soap, "ns1:CanLoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Login *ns1__Login, _ns1__LoginResponse &ns1__LoginResponse)
{	struct __ns1__Login soap_tmp___ns1__Login;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/Login";
	soap_tmp___ns1__Login.ns1__Login = ns1__Login;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Login(soap, &soap_tmp___ns1__Login);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Login(soap, &soap_tmp___ns1__Login, "-ns1:Login", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Login(soap, &soap_tmp___ns1__Login, "-ns1:Login", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__LoginResponse*>(&ns1__LoginResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginResponse.soap_get(soap, "ns1:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetWorkCenterID_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetWorkCenterID *ns1__GetWorkCenterID, _ns1__GetWorkCenterIDResponse &ns1__GetWorkCenterIDResponse)
{	struct __ns1__GetWorkCenterID_ soap_tmp___ns1__GetWorkCenterID_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetWorkCenterID";
	soap_tmp___ns1__GetWorkCenterID_.ns1__GetWorkCenterID = ns1__GetWorkCenterID;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetWorkCenterID_(soap, &soap_tmp___ns1__GetWorkCenterID_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetWorkCenterID_(soap, &soap_tmp___ns1__GetWorkCenterID_, "-ns1:GetWorkCenterID", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetWorkCenterID_(soap, &soap_tmp___ns1__GetWorkCenterID_, "-ns1:GetWorkCenterID", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetWorkCenterIDResponse*>(&ns1__GetWorkCenterIDResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetWorkCenterIDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetWorkCenterIDResponse.soap_get(soap, "ns1:GetWorkCenterIDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetCurrentSpecBySn_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCurrentSpecBySn *ns1__GetCurrentSpecBySn, _ns1__GetCurrentSpecBySnResponse &ns1__GetCurrentSpecBySnResponse)
{	struct __ns1__GetCurrentSpecBySn_ soap_tmp___ns1__GetCurrentSpecBySn_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetCurrentSpecBySn";
	soap_tmp___ns1__GetCurrentSpecBySn_.ns1__GetCurrentSpecBySn = ns1__GetCurrentSpecBySn;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetCurrentSpecBySn_(soap, &soap_tmp___ns1__GetCurrentSpecBySn_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetCurrentSpecBySn_(soap, &soap_tmp___ns1__GetCurrentSpecBySn_, "-ns1:GetCurrentSpecBySn", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetCurrentSpecBySn_(soap, &soap_tmp___ns1__GetCurrentSpecBySn_, "-ns1:GetCurrentSpecBySn", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetCurrentSpecBySnResponse*>(&ns1__GetCurrentSpecBySnResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetCurrentSpecBySnResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetCurrentSpecBySnResponse.soap_get(soap, "ns1:GetCurrentSpecBySnResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__IV_USCOREDataCollection_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__IV_USCOREDataCollection *ns1__IV_USCOREDataCollection, _ns1__IV_USCOREDataCollectionResponse &ns1__IV_USCOREDataCollectionResponse)
{	struct __ns1__IV_USCOREDataCollection_ soap_tmp___ns1__IV_USCOREDataCollection_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IV_DataCollection";
	soap_tmp___ns1__IV_USCOREDataCollection_.ns1__IV_USCOREDataCollection = ns1__IV_USCOREDataCollection;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__IV_USCOREDataCollection_(soap, &soap_tmp___ns1__IV_USCOREDataCollection_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__IV_USCOREDataCollection_(soap, &soap_tmp___ns1__IV_USCOREDataCollection_, "-ns1:IV_DataCollection", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__IV_USCOREDataCollection_(soap, &soap_tmp___ns1__IV_USCOREDataCollection_, "-ns1:IV_DataCollection", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__IV_USCOREDataCollectionResponse*>(&ns1__IV_USCOREDataCollectionResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__IV_USCOREDataCollectionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IV_USCOREDataCollectionResponse.soap_get(soap, "ns1:IV_DataCollectionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__jKoIVMoveStd_USCOREPasan_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__jKoIVMoveStd_USCOREPasan *ns1__jKoIVMoveStd_USCOREPasan, _ns1__jKoIVMoveStd_USCOREPasanResponse &ns1__jKoIVMoveStd_USCOREPasanResponse)
{	struct __ns1__jKoIVMoveStd_USCOREPasan_ soap_tmp___ns1__jKoIVMoveStd_USCOREPasan_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/jKoIVMoveStd_Pasan";
	soap_tmp___ns1__jKoIVMoveStd_USCOREPasan_.ns1__jKoIVMoveStd_USCOREPasan = ns1__jKoIVMoveStd_USCOREPasan;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__jKoIVMoveStd_USCOREPasan_(soap, &soap_tmp___ns1__jKoIVMoveStd_USCOREPasan_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__jKoIVMoveStd_USCOREPasan_(soap, &soap_tmp___ns1__jKoIVMoveStd_USCOREPasan_, "-ns1:jKoIVMoveStd_Pasan", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__jKoIVMoveStd_USCOREPasan_(soap, &soap_tmp___ns1__jKoIVMoveStd_USCOREPasan_, "-ns1:jKoIVMoveStd_Pasan", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__jKoIVMoveStd_USCOREPasanResponse*>(&ns1__jKoIVMoveStd_USCOREPasanResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__jKoIVMoveStd_USCOREPasanResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__jKoIVMoveStd_USCOREPasanResponse.soap_get(soap, "ns1:jKoIVMoveStd_PasanResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__jKoIVMoveStd_USCORESpire_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__jKoIVMoveStd_USCORESpire *ns1__jKoIVMoveStd_USCORESpire, _ns1__jKoIVMoveStd_USCORESpireResponse &ns1__jKoIVMoveStd_USCORESpireResponse)
{	struct __ns1__jKoIVMoveStd_USCORESpire_ soap_tmp___ns1__jKoIVMoveStd_USCORESpire_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/jKoIVMoveStd_Spire";
	soap_tmp___ns1__jKoIVMoveStd_USCORESpire_.ns1__jKoIVMoveStd_USCORESpire = ns1__jKoIVMoveStd_USCORESpire;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__jKoIVMoveStd_USCORESpire_(soap, &soap_tmp___ns1__jKoIVMoveStd_USCORESpire_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__jKoIVMoveStd_USCORESpire_(soap, &soap_tmp___ns1__jKoIVMoveStd_USCORESpire_, "-ns1:jKoIVMoveStd_Spire", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__jKoIVMoveStd_USCORESpire_(soap, &soap_tmp___ns1__jKoIVMoveStd_USCORESpire_, "-ns1:jKoIVMoveStd_Spire", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__jKoIVMoveStd_USCORESpireResponse*>(&ns1__jKoIVMoveStd_USCORESpireResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__jKoIVMoveStd_USCORESpireResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__jKoIVMoveStd_USCORESpireResponse.soap_get(soap, "ns1:jKoIVMoveStd_SpireResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ELPictureAddress_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ELPictureAddress *ns1__ELPictureAddress, _ns1__ELPictureAddressResponse &ns1__ELPictureAddressResponse)
{	struct __ns1__ELPictureAddress_ soap_tmp___ns1__ELPictureAddress_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/ELPictureAddress";
	soap_tmp___ns1__ELPictureAddress_.ns1__ELPictureAddress = ns1__ELPictureAddress;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ELPictureAddress_(soap, &soap_tmp___ns1__ELPictureAddress_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ELPictureAddress_(soap, &soap_tmp___ns1__ELPictureAddress_, "-ns1:ELPictureAddress", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ELPictureAddress_(soap, &soap_tmp___ns1__ELPictureAddress_, "-ns1:ELPictureAddress", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ELPictureAddressResponse*>(&ns1__ELPictureAddressResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ELPictureAddressResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ELPictureAddressResponse.soap_get(soap, "ns1:ELPictureAddressResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ELInfoMoveStd_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ELInfoMoveStd *ns1__ELInfoMoveStd, _ns1__ELInfoMoveStdResponse &ns1__ELInfoMoveStdResponse)
{	struct __ns1__ELInfoMoveStd_ soap_tmp___ns1__ELInfoMoveStd_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/ELInfoMoveStd";
	soap_tmp___ns1__ELInfoMoveStd_.ns1__ELInfoMoveStd = ns1__ELInfoMoveStd;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__ELInfoMoveStd_(soap, &soap_tmp___ns1__ELInfoMoveStd_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ELInfoMoveStd_(soap, &soap_tmp___ns1__ELInfoMoveStd_, "-ns1:ELInfoMoveStd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ELInfoMoveStd_(soap, &soap_tmp___ns1__ELInfoMoveStd_, "-ns1:ELInfoMoveStd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__ELInfoMoveStdResponse*>(&ns1__ELInfoMoveStdResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__ELInfoMoveStdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ELInfoMoveStdResponse.soap_get(soap, "ns1:ELInfoMoveStdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SafetyInfoMoveStd_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SafetyInfoMoveStd *ns1__SafetyInfoMoveStd, _ns1__SafetyInfoMoveStdResponse &ns1__SafetyInfoMoveStdResponse)
{	struct __ns1__SafetyInfoMoveStd_ soap_tmp___ns1__SafetyInfoMoveStd_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SafetyInfoMoveStd";
	soap_tmp___ns1__SafetyInfoMoveStd_.ns1__SafetyInfoMoveStd = ns1__SafetyInfoMoveStd;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SafetyInfoMoveStd_(soap, &soap_tmp___ns1__SafetyInfoMoveStd_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SafetyInfoMoveStd_(soap, &soap_tmp___ns1__SafetyInfoMoveStd_, "-ns1:SafetyInfoMoveStd", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SafetyInfoMoveStd_(soap, &soap_tmp___ns1__SafetyInfoMoveStd_, "-ns1:SafetyInfoMoveStd", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SafetyInfoMoveStdResponse*>(&ns1__SafetyInfoMoveStdResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SafetyInfoMoveStdResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SafetyInfoMoveStdResponse.soap_get(soap, "ns1:SafetyInfoMoveStdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__UploadTensileInfoToMes_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UploadTensileInfoToMes *ns1__UploadTensileInfoToMes, _ns1__UploadTensileInfoToMesResponse &ns1__UploadTensileInfoToMesResponse)
{	struct __ns1__UploadTensileInfoToMes_ soap_tmp___ns1__UploadTensileInfoToMes_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/UploadTensileInfoToMes";
	soap_tmp___ns1__UploadTensileInfoToMes_.ns1__UploadTensileInfoToMes = ns1__UploadTensileInfoToMes;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__UploadTensileInfoToMes_(soap, &soap_tmp___ns1__UploadTensileInfoToMes_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__UploadTensileInfoToMes_(soap, &soap_tmp___ns1__UploadTensileInfoToMes_, "-ns1:UploadTensileInfoToMes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__UploadTensileInfoToMes_(soap, &soap_tmp___ns1__UploadTensileInfoToMes_, "-ns1:UploadTensileInfoToMes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__UploadTensileInfoToMesResponse*>(&ns1__UploadTensileInfoToMesResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__UploadTensileInfoToMesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__UploadTensileInfoToMesResponse.soap_get(soap, "ns1:UploadTensileInfoToMesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetContainerDataInfoMES_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetContainerDataInfoMES *ns1__GetContainerDataInfoMES, _ns1__GetContainerDataInfoMESResponse &ns1__GetContainerDataInfoMESResponse)
{	struct __ns1__GetContainerDataInfoMES_ soap_tmp___ns1__GetContainerDataInfoMES_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetContainerDataInfoMES";
	soap_tmp___ns1__GetContainerDataInfoMES_.ns1__GetContainerDataInfoMES = ns1__GetContainerDataInfoMES;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetContainerDataInfoMES_(soap, &soap_tmp___ns1__GetContainerDataInfoMES_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetContainerDataInfoMES_(soap, &soap_tmp___ns1__GetContainerDataInfoMES_, "-ns1:GetContainerDataInfoMES", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetContainerDataInfoMES_(soap, &soap_tmp___ns1__GetContainerDataInfoMES_, "-ns1:GetContainerDataInfoMES", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetContainerDataInfoMESResponse*>(&ns1__GetContainerDataInfoMESResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetContainerDataInfoMESResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetContainerDataInfoMESResponse.soap_get(soap, "ns1:GetContainerDataInfoMESResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetTensileTestRule_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTensileTestRule *ns1__GetTensileTestRule, _ns1__GetTensileTestRuleResponse &ns1__GetTensileTestRuleResponse)
{	struct __ns1__GetTensileTestRule_ soap_tmp___ns1__GetTensileTestRule_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetTensileTestRule";
	soap_tmp___ns1__GetTensileTestRule_.ns1__GetTensileTestRule = ns1__GetTensileTestRule;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetTensileTestRule_(soap, &soap_tmp___ns1__GetTensileTestRule_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetTensileTestRule_(soap, &soap_tmp___ns1__GetTensileTestRule_, "-ns1:GetTensileTestRule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetTensileTestRule_(soap, &soap_tmp___ns1__GetTensileTestRule_, "-ns1:GetTensileTestRule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetTensileTestRuleResponse*>(&ns1__GetTensileTestRuleResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetTensileTestRuleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetTensileTestRuleResponse.soap_get(soap, "ns1:GetTensileTestRuleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Iscalibrationcontainer_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Iscalibrationcontainer *ns1__Iscalibrationcontainer, _ns1__IscalibrationcontainerResponse &ns1__IscalibrationcontainerResponse)
{	struct __ns1__Iscalibrationcontainer_ soap_tmp___ns1__Iscalibrationcontainer_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/Iscalibrationcontainer";
	soap_tmp___ns1__Iscalibrationcontainer_.ns1__Iscalibrationcontainer = ns1__Iscalibrationcontainer;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Iscalibrationcontainer_(soap, &soap_tmp___ns1__Iscalibrationcontainer_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Iscalibrationcontainer_(soap, &soap_tmp___ns1__Iscalibrationcontainer_, "-ns1:Iscalibrationcontainer", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Iscalibrationcontainer_(soap, &soap_tmp___ns1__Iscalibrationcontainer_, "-ns1:Iscalibrationcontainer", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__IscalibrationcontainerResponse*>(&ns1__IscalibrationcontainerResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__IscalibrationcontainerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IscalibrationcontainerResponse.soap_get(soap, "ns1:IscalibrationcontainerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetFtpAddress_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFtpAddress *ns1__GetFtpAddress, _ns1__GetFtpAddressResponse &ns1__GetFtpAddressResponse)
{	struct __ns1__GetFtpAddress_ soap_tmp___ns1__GetFtpAddress_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetFtpAddress";
	soap_tmp___ns1__GetFtpAddress_.ns1__GetFtpAddress = ns1__GetFtpAddress;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetFtpAddress_(soap, &soap_tmp___ns1__GetFtpAddress_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetFtpAddress_(soap, &soap_tmp___ns1__GetFtpAddress_, "-ns1:GetFtpAddress", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetFtpAddress_(soap, &soap_tmp___ns1__GetFtpAddress_, "-ns1:GetFtpAddress", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetFtpAddressResponse*>(&ns1__GetFtpAddressResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetFtpAddressResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetFtpAddressResponse.soap_get(soap, "ns1:GetFtpAddressResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDefectInfoToSAP_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDefectInfoToSAP *ns1__GetDefectInfoToSAP, _ns1__GetDefectInfoToSAPResponse &ns1__GetDefectInfoToSAPResponse)
{	struct __ns1__GetDefectInfoToSAP_ soap_tmp___ns1__GetDefectInfoToSAP_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetDefectInfoToSAP";
	soap_tmp___ns1__GetDefectInfoToSAP_.ns1__GetDefectInfoToSAP = ns1__GetDefectInfoToSAP;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDefectInfoToSAP_(soap, &soap_tmp___ns1__GetDefectInfoToSAP_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDefectInfoToSAP_(soap, &soap_tmp___ns1__GetDefectInfoToSAP_, "-ns1:GetDefectInfoToSAP", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDefectInfoToSAP_(soap, &soap_tmp___ns1__GetDefectInfoToSAP_, "-ns1:GetDefectInfoToSAP", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__GetDefectInfoToSAPResponse*>(&ns1__GetDefectInfoToSAPResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__GetDefectInfoToSAPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDefectInfoToSAPResponse.soap_get(soap, "ns1:GetDefectInfoToSAPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetDefectResultToMES_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetDefectResultToMES *ns1__SetDefectResultToMES, _ns1__SetDefectResultToMESResponse &ns1__SetDefectResultToMESResponse)
{	struct __ns1__SetDefectResultToMES_ soap_tmp___ns1__SetDefectResultToMES_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetDefectResultToMES";
	soap_tmp___ns1__SetDefectResultToMES_.ns1__SetDefectResultToMES = ns1__SetDefectResultToMES;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetDefectResultToMES_(soap, &soap_tmp___ns1__SetDefectResultToMES_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetDefectResultToMES_(soap, &soap_tmp___ns1__SetDefectResultToMES_, "-ns1:SetDefectResultToMES", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetDefectResultToMES_(soap, &soap_tmp___ns1__SetDefectResultToMES_, "-ns1:SetDefectResultToMES", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetDefectResultToMESResponse*>(&ns1__SetDefectResultToMESResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetDefectResultToMESResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetDefectResultToMESResponse.soap_get(soap, "ns1:SetDefectResultToMESResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetMaterialBatchResultToMES_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetMaterialBatchResultToMES *ns1__SetMaterialBatchResultToMES, _ns1__SetMaterialBatchResultToMESResponse &ns1__SetMaterialBatchResultToMESResponse)
{	struct __ns1__SetMaterialBatchResultToMES_ soap_tmp___ns1__SetMaterialBatchResultToMES_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/SetMaterialBatchResultToMES";
	soap_tmp___ns1__SetMaterialBatchResultToMES_.ns1__SetMaterialBatchResultToMES = ns1__SetMaterialBatchResultToMES;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SetMaterialBatchResultToMES_(soap, &soap_tmp___ns1__SetMaterialBatchResultToMES_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetMaterialBatchResultToMES_(soap, &soap_tmp___ns1__SetMaterialBatchResultToMES_, "-ns1:SetMaterialBatchResultToMES", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetMaterialBatchResultToMES_(soap, &soap_tmp___ns1__SetMaterialBatchResultToMES_, "-ns1:SetMaterialBatchResultToMES", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__SetMaterialBatchResultToMESResponse*>(&ns1__SetMaterialBatchResultToMESResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__SetMaterialBatchResultToMESResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetMaterialBatchResultToMESResponse.soap_get(soap, "ns1:SetMaterialBatchResultToMESResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs *ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs, _ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse &ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse)
{	struct __ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_ soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/Upload_FIDWUL_DATAFLAGs";
	soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_.ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs = ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_(soap, &soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_(soap, &soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_, "-ns1:Upload_FIDWUL_DATAFLAGs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_(soap, &soap_tmp___ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGs_, "-ns1:Upload_FIDWUL_DATAFLAGs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse*>(&ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__Upload_USCOREFIDWUL_USCOREDATAFLAGsResponse.soap_get(soap, "ns1:Upload_FIDWUL_DATAFLAGsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CanLogin_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CanLogin *ns1__CanLogin, _ns1__CanLoginResponse &ns1__CanLoginResponse)
{	struct __ns1__CanLogin_ soap_tmp___ns1__CanLogin_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/CanLogin";
	soap_tmp___ns1__CanLogin_.ns1__CanLogin = ns1__CanLogin;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CanLogin_(soap, &soap_tmp___ns1__CanLogin_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CanLogin_(soap, &soap_tmp___ns1__CanLogin_, "-ns1:CanLogin", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CanLogin_(soap, &soap_tmp___ns1__CanLogin_, "-ns1:CanLogin", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__CanLoginResponse*>(&ns1__CanLoginResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__CanLoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CanLoginResponse.soap_get(soap, "ns1:CanLoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Login_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Login *ns1__Login, _ns1__LoginResponse &ns1__LoginResponse)
{	struct __ns1__Login_ soap_tmp___ns1__Login_;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.16.7.176/MESWebService/MESWebService.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/Login";
	soap_tmp___ns1__Login_.ns1__Login = ns1__Login;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Login_(soap, &soap_tmp___ns1__Login_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Login_(soap, &soap_tmp___ns1__Login_, "-ns1:Login", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Login_(soap, &soap_tmp___ns1__Login_, "-ns1:Login", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_ns1__LoginResponse*>(&ns1__LoginResponse)) // NULL ref?
		return soap_closesock(soap);
	ns1__LoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__LoginResponse.soap_get(soap, "ns1:LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
